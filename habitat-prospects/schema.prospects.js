Prospects.schema = new SimpleSchema({
  _id: { type: String, regEx: SimpleSchema.RegEx.Id },
  habitat: { type: [String], regEx: SimpleSchema.RegEx.Id },
  company_name: { type: String, trim: true, optional: false },
  company_address: { type: String, trim: true, optional: true },
  company_phone: { type: String, trim: true, max: 10, optional: true },
  company_type: { type: String, trim: true, optional: true, allowedValues: ['Fast Casual', 'Food Truck', 'Dine In'] },
  status: { type: String, trim: true, optional: false, allowedValues: ['Onboard', 'Intro', 'No for now', 'Test Transaction'] },
  priority: { type: String, trim: true, optional: false, allowedValues: ['very high', 'high', 'medium', 'low', 'nonexistent'] },
  platform_priority: { type: String, trim: true, optional: true, allowedValues: ['Both', 'DaaS', 'Consumer'] },
  hiring: { type: String, trim: true, optional: true, allowedValues: ['Outsourced', 'In-house'] },
  categories: { type: [String], trim: true, optional: true },
  menu_difficulty: { type: String, trim: true, optional: true, allowedValues: ['Low (< 100 Combos)', 'Medium (100+ Combos)', 'High (300+ Combos)'] },
  eat24: { type: Boolean, optional: true },
  reviews: { type: String, trim: true, optional: true, allowedValues: ['50+', '100+', '300+'] },
  yelp_rating: { type: Number, optional: true },
  grubhub: { type: Boolean, optional: true },
  uberEats: { type: Boolean, optional: true },
  postmates: { type: Boolean, optional: true },
  caviar: { type: Boolean, optional: true },
  catering: { type: Boolean, optional: true },
  DaaS: { type: Boolean, optional: true },
  DaaSGH: { type: Boolean, optional: true },
  notificationPreference: { type: String, trim: true, optional: true, allowedValues: ['sms', 'email', 'fax', 'app', 'receipt printer'] },
  habitatOwnsTablet: { type: Boolean, optional: true },
  serialNumber: { type: Number, optional: true },
  direct_deposit: { type: Boolean, optional: true },
}); Prospects.attachSchema(Prospects.schema);
